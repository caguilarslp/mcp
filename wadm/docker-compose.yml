services:
  # Frontend Dashboard con Charts
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_MCP_URL=http://localhost:8001
      - REACT_APP_WS_URL=ws://localhost:8000
    depends_on:
      - backend
      - mcp-server
    networks:
      - wadm-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mongodb://wadm:wadm_secure_2024@mongo:27017/wadm?authSource=admin
      - MCP_SERVER_URL=http://mcp-server:8001
      - REDIS_URL=redis://:wadm_redis_2024@redis:6379
      - CORS_ORIGINS=http://localhost:3000
    depends_on:
      - mongo
      - redis
      - mcp-server
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - wadm-network

  # Data Collectors (WebSocket exchanges)
  collectors:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - DATABASE_URL=mongodb://wadm:wadm_secure_2024@mongo:27017/wadm?authSource=admin
      - REDIS_URL=redis://:wadm_redis_2024@redis:6379
      - ALL_SYMBOLS=BTCUSDT,ETHUSDT,SOLUSDT,TRXUSDT,XRPUSDT,XLMUSDT,HBARUSDT,ADAUSDT
    depends_on:
      - mongo
      - redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - wadm-network
    command: ["python", "main.py"]

  # MCP Server with 133 Tools
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    ports:
      - "8001:8001"
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - CACHE_TTL=300
      - MAX_CONCURRENT_REQUESTS=10
      - MONGODB_URI=mongodb://wadm:wadm_secure_2024@mongo:27017/wadm?authSource=admin
      - REDIS_URL=redis://:wadm_redis_2024@redis:6379
    volumes:
      - ./mcp_server/storage:/app/storage
      - ./mcp_server/logs:/app/logs
      - ./mcp_server/reports:/app/reports
    networks:
      - wadm-network

  # MongoDB Database
  mongo:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=wadm
      - MONGO_INITDB_ROOT_PASSWORD=wadm_secure_2024
      - MONGO_INITDB_DATABASE=wadm
    volumes:
      - mongo_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - wadm-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass wadm_redis_2024
    volumes:
      - redis_data:/data
    networks:
      - wadm-network

  # Nginx Reverse Proxy - DISABLED (frontend already includes nginx)
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/wadm.conf:/etc/nginx/conf.d/default.conf:ro
  #   depends_on:
  #     - frontend
  #     - backend
  #     - mcp-server
  #   networks:
  #     - wadm-network

volumes:
  mongo_data:
  redis_data:

networks:
  wadm-network:
    driver: bridge

# Metadata
x-environment-info:
  description: "WADM Development Environment with MCP Server"
  version: "0.1.0"
  services: "MongoDB 7, Redis 7, MCP Server, WADM API, Nginx (optional)"
  quick_start: "docker-compose up -d"
  api_url: "http://localhost:8000"
  docs_url: "http://localhost:8000/api/docs"
  mcp_health: "http://localhost:8000/api/v1/mcp/health"
