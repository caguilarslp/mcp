# 🤖 WADM - wAIckoff Data Manager Context

## 📋 Estado Actual
- **Versión:** v0.1.0
- **Fecha:** 15/06/2025
- **Status:** Planificación - Sistema de trazabilidad creado
- **Fase Actual:** Pre-desarrollo - Decisiones arquitectónicas pendientes

## 🎯 Objetivo del Proyecto
Sistema de recolección y distribución de indicadores de mercado (Volume Profile y Order Flow) para alimentar el ecosistema wAIckoff con datos procesados de alta calidad.

## 🏗️ Arquitectura
- **VPS con Docker**: Collectors (Binance/Bybit) → MongoDB → MCP Server
- **Clientes locales**: MCP Client → Cache en waickoff_reports/indicators/
- **Seguridad**: API Keys + HTTPS + MongoDB interno

## 📁 Estructura del Proyecto
```
wadm/
├── docs/
│   ├── trazabilidad/    # Sistema de tracking
│   └── arquitectura/    # Diseños técnicos
├── docker/              # Docker Compose y configs
├── src/                 # Código fuente
└── tests/              # Tests unitarios
```

## ✅ Decisiones Tomadas
- MongoDB para time-series data
- WebSocket para recolección
- MCP Protocol para distribución
- Docker Compose para deployment
- API Keys para autenticación
- **Puerto API**: 8920 (no estándar, evita conflictos con Plesk)
- **URLs**: https://tu-dominio.com:8920/* (con SSL)

## ❓ Decisiones Pendientes
1. Timeframes a soportar (¿solo 1h o multi-timeframe?)
2. Símbolos iniciales (¿BTC, ETH, SOL o más?)
3. Frecuencia de actualización cliente (¿1min, 5min?)
4. Retención de datos (¿7d, 30d?)
5. Procesamiento: ¿buffer memoria o Redis Streams?

## 📊 Indicadores a Implementar
**Volume Profile**: POC, VAH, VAL, distribución por precio
**Order Flow**: Delta, Delta acumulativo, Imbalance ratio, Large trades

## 🔧 Stack Tecnológico
- Python 3.11 (collectors)
- TypeScript (MCP server/client)
- MongoDB (storage)
- Docker + Nginx (deployment)
- WebSocket (data feeds)

## 📈 Progreso: 0% (15 tareas definidas)

## 🚀 Próximos Pasos
1. Confirmar decisiones pendientes
2. TASK-001: Setup Docker base
3. TASK-002: MongoDB schema design

## 📝 Archivos Clave
- `docs/trazabilidad/tareas.md` - Plan completo de tareas
- `docs/trazabilidad/decisiones.md` - Registro de decisiones
- `docs/arquitectura/arquitectura-general.md` - Diseño del sistema
- `docs/arquitectura/database-design.md` - Esquemas MongoDB

---
*Contexto mínimo para desarrollo del proyecto WADM*
